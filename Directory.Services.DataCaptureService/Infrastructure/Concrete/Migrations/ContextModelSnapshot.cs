// <auto-generated />
using System;
using Directory.Services.DataCaptureService.Infrastructure.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Directory.Services.DataCaptureService.Infrastructure.Concrete.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Directory.Services.DataCaptureService.Domain.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("text");

                    b.Property<string>("ContactType")
                        .HasColumnType("text");

                    b.Property<Guid>("PhonebookId")
                        .HasColumnType("uuid");

                    b.HasKey("ContactId");

                    b.HasIndex("PhonebookId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Directory.Services.DataCaptureService.Domain.Phonebook", b =>
                {
                    b.Property<Guid>("PhonebookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("PhonebookId");

                    b.ToTable("Phonebooks");
                });

            modelBuilder.Entity("Directory.Services.DataCaptureService.Domain.Contact", b =>
                {
                    b.HasOne("Directory.Services.DataCaptureService.Domain.Phonebook", "Phonebook")
                        .WithMany("Contacts")
                        .HasForeignKey("PhonebookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phonebook");
                });

            modelBuilder.Entity("Directory.Services.DataCaptureService.Domain.Phonebook", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
