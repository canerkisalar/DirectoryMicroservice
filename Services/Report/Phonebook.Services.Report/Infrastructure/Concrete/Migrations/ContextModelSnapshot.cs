// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Phonebook.Services.Report.Infrastructure.Concrete.EntityFramework;
using System.Diagnostics.CodeAnalysis;


namespace Phonebook.Services.Report.Infrastructure.Concrete.Migrations
{
    [DbContext(typeof(Context))]
    [ExcludeFromCodeCoverage]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Phonebook.Services.Report.Models.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("text");

                    b.Property<string>("ContactType")
                        .HasColumnType("text");

                    b.Property<Guid>("PhonebookId")
                        .HasColumnType("uuid");

                    b.HasKey("ContactId");

                    b.HasIndex("PhonebookId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Phonebook", b =>
                {
                    b.Property<Guid>("PhonebookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("PhonebookId");

                    b.ToTable("Phonebooks");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Report.ReportHead", b =>
                {
                    b.Property<Guid>("ReportHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PreparationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("ReportHeadId");

                    b.ToTable("ReportHead");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Report.ReportItem", b =>
                {
                    b.Property<Guid>("ReportItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid>("ReportHeadId")
                        .HasColumnType("uuid");

                    b.HasKey("ReportItemId");

                    b.HasIndex("ReportHeadId")
                        .IsUnique();

                    b.ToTable("ReportItem");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Contact", b =>
                {
                    b.HasOne("Phonebook.Services.Report.Models.Phonebook", "Phonebook")
                        .WithMany("Contacts")
                        .HasForeignKey("PhonebookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phonebook");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Report.ReportItem", b =>
                {
                    b.HasOne("Phonebook.Services.Report.Models.Report.ReportHead", "ReportHead")
                        .WithOne("ReportItem")
                        .HasForeignKey("Phonebook.Services.Report.Models.Report.ReportItem", "ReportHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportHead");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Phonebook", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Phonebook.Services.Report.Models.Report.ReportHead", b =>
                {
                    b.Navigation("ReportItem");
                });
#pragma warning restore 612, 618
        }
    }
}
